# work around the lack of IAM policy by using aws s3 instead
# requires a corresponding S3 bucket policy for the IAM role
commands:
  get_dev:
    command: aws s3 cp s3://spininterview-notejam/dev.json /tmp/dev.json
  get_prod:
    command: aws s3 cp s3://spininterview-notejam/prod.json /tmp/prod.json

# the following would be the preferred way to do this but it requires IAM policy access
#Resources:
#   AWSEBAutoScalingGroup:
#    Metadata:
#      AWS::CloudFormation::Authentication:
#        S3Auth:
#          type: "s3"
#          buckets: ["spininterview-notejam"]
#          roleName: "aws-elasticbeanstalk-ec2-role"

#files:
#  "/tmp/prod.json" :
#    mode: "000644"
#    owner: root
#    group: root
#    authentication: "S3Auth"
#    source: https://spininterview-notejam.s3-us-west-2.amazonaws.com/prod.json

#files:
#  "/tmp/dev.json" :
#    mode: "000644"
#    owner: root
#    group: root
#    authentication: "S3Auth"
#    source: https://spininterview-notejam.s3-us-west-2.amazonaws.com/dev.json
